{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from \"react\";\nimport Beds from \"./Beds\";\nimport Guests from \"./Guests\";\nimport Intake from \"./Intake\";\nimport Home from \"./Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RenderScreen = function RenderScreen(props) {\n  switch (props.currentScreen) {\n    case 'home':\n      return _jsx(Home, _objectSpread({}, props));\n\n    case \"beds\":\n      return _jsx(Beds, _objectSpread({}, props));\n\n    case 'guests':\n      return _jsx(Guests, {});\n\n    case 'intake':\n      return _jsx(Intake, {});\n\n    default:\n      return _jsx(View, {});\n  }\n\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"RenderScreen\"\n    })\n  });\n};\n\nexport default RenderScreen;","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/ShelterDashboardScreen/components/Screens/RenderScreen.jsx"],"names":["React","Beds","Guests","Intake","Home","RenderScreen","props","currentScreen"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,UAAQA,KAAK,CAACC,aAAd;AACE,SAAK,MAAL;AACI,aAAO,KAAC,IAAD,oBAAUD,KAAV,EAAP;;AACJ,SAAK,MAAL;AACI,aAAO,KAAC,IAAD,oBAAUA,KAAV,EAAP;;AACJ,SAAK,QAAL;AACI,aAAO,KAAC,MAAD,KAAP;;AACJ,SAAK,QAAL;AACI,aAAO,KAAC,MAAD,KAAP;;AACJ;AACI,aAAO,KAAC,IAAD,KAAP;AAVN;;AAaA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADF;AAKD,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import { View, Text } from \"react-native\";\nimport React from \"react\";\n\nimport Beds from \"./Beds\";\nimport Guests from \"./Guests\";\nimport Intake from \"./Intake\";\nimport Home from \"./Home\";\n\nconst RenderScreen = (props) => {\n  switch (props.currentScreen) {\n    case 'home':\n        return <Home {...props} />\n    case \"beds\":\n        return <Beds {...props}/>\n    case 'guests':\n        return <Guests />\n    case 'intake':\n        return <Intake />\n    default:\n        return <View></View>\n  }\n\n  return (\n    <View>\n      <Text>RenderScreen</Text>\n    </View>\n  );\n};\n\nexport default RenderScreen;\n"]},"metadata":{},"sourceType":"module"}