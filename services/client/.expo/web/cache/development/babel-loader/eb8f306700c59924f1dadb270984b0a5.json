{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Index() {\n  var navigation = useNavigation();\n\n  var _useGetCurrentUserQue = useGetCurrentUserQuery(),\n      _useGetCurrentUserQue2 = _slicedToArray(_useGetCurrentUserQue, 2),\n      user = _useGetCurrentUserQue2[0],\n      loading = _useGetCurrentUserQue2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (user) {\n      dispatch(setCurrentUser(user));\n      alert(user.role);\n\n      switch (user.role) {\n        case \"programManager\":\n          navigation.navigate(\"shelters\");\n          break;\n\n        case 'guest':\n          navigation.navigate('Guest');\n      }\n    }\n  }, [user]);\n\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Loading\"\n    });\n  }\n\n  return _jsx(Text, {});\n}\n\nvar RedirectUser = function RedirectUser(_ref) {\n  var user = _ref.user;\n  var navigation = useNavigation();\n  useEffect(function () {\n    switch (user.role) {\n      case \"programManager\":\n        navigation.navigate(\"shelters\");\n\n      case \"guest\":\n        navigation.navigate(\"Guest\");\n    }\n  }, []);\n  return _jsx(Text, {});\n};","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/HomeScreen/HomeScreen.tsx"],"names":["React","useEffect","useGetCurrentUserQuery","useDispatch","setCurrentUser","useNavigation","Index","navigation","user","loading","dispatch","alert","role","navigate","RedirectUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,SAASC,sBAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AAEA,8BAAwBH,sBAAsB,EAA9C;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,IAAJ,EAAU;AACRE,MAAAA,QAAQ,CAACN,cAAc,CAACI,IAAD,CAAf,CAAR;AAEAG,MAAAA,KAAK,CAACH,IAAI,CAACI,IAAN,CAAL;;AAEA,cAAQJ,IAAI,CAACI,IAAb;AACE,aAAK,gBAAL;AACEL,UAAAA,UAAU,CAACM,QAAX,CAAoB,UAApB;AAEA;;AACF,aAAK,OAAL;AACEN,UAAAA,UAAU,CAACM,QAAX,CAAoB,OAApB;AANJ;AAQD;AACF,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;;AAiBA,MAAIC,OAAJ,EAAa;AACX,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,KAAC,IAAD,KAAP;AACD;;AAED,IAAMK,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA,MAAXN,IAAW,QAAXA,IAAW;AACjC,MAAMD,UAAU,GAAGF,aAAa,EAAhC;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACd,YAAQO,IAAI,CAACI,IAAb;AACE,WAAK,gBAAL;AACEL,QAAAA,UAAU,CAACM,QAAX,CAAoB,UAApB;;AACF,WAAK,OAAL;AACEN,QAAAA,UAAU,CAACM,QAAX,CAAoB,OAApB;AAJJ;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,SAAO,KAAC,IAAD,KAAP;AACD,CAbD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\n\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport Redirect from \"../../components/Redirect\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Index() {\n  const navigation = useNavigation();\n\n  const [user, loading] = useGetCurrentUserQuery();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user) {\n      dispatch(setCurrentUser(user));\n\n      alert(user.role)\n\n      switch (user.role) {\n        case \"programManager\":\n          navigation.navigate(\"shelters\");\n\n          break\n        case 'guest':\n          navigation.navigate('Guest')\n      }\n    }\n  }, [user]);\n\n  if (loading) {\n    return <Text>Loading</Text>;\n  }\n\n  return <Text></Text>;\n}\n\nconst RedirectUser = ({ user }) => {\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    switch (user.role) {\n      case \"programManager\":\n        navigation.navigate(\"shelters\");\n      case \"guest\":\n        navigation.navigate(\"Guest\");\n    }\n  }, []);\n\n  return <Text></Text>;\n};\n"]},"metadata":{},"sourceType":"module"}