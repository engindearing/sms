{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItem, DrawerItemList } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Help\",\n      onPress: function onPress() {\n        return alert('hello');\n      }\n    })]\n  }));\n}\n\nvar IntakeScreen = function IntakeScreen(_ref) {\n  var route = _ref.route;\n  var Drawer = createDrawerNavigator();\n  return _jsx(Drawer.Navigator, {\n    drawerContent: CustomDrawerContent,\n    screenOptions: {\n      drawerType: 'permanent',\n      headerShown: false\n    },\n    children: _jsx(DrawerItem, {\n      label: \"Help\",\n      onPress: function onPress() {\n        return alert('test');\n      }\n    })\n  });\n};\n\nexport default IntakeScreen;\nvar styles = StyleSheet.create({});\n\nfunction MyComponent(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(View, {\n    children: _jsx(Text, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: \"IntakeScreen\"\n    })\n  });\n}","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/IntakeScreen/IntakeScreen.tsx"],"names":["React","createDrawerNavigator","DrawerContentScrollView","DrawerItem","DrawerItemList","CustomDrawerContent","props","alert","IntakeScreen","route","Drawer","drawerType","headerShown","styles","StyleSheet","create","MyComponent","navigation","navigate"],"mappings":";;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,EAAgCC,uBAAhC,EAAyDC,UAAzD,EAAqEC,cAArE,QAA2F,0BAA3F;;;;AAIA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC,SACE,MAAC,uBAAD,kCAA6BA,KAA7B;AAAA,eACE,KAAC,cAAD,oBAAoBA,KAApB,EADF,EAEE,KAAC,UAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMC,KAAK,CAAC,OAAD,CAAX;AAAA;AAFX,MAFF;AAAA,KADF;AASD;;AAEH,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAElC,MAAMC,MAAM,GAAGT,qBAAqB,EAApC;AAEA,SACE,KAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,aAAa,EAAEI,mBAAjC;AAAuD,IAAA,aAAa,EAAE;AAClEM,MAAAA,UAAU,EAAE,WADsD;AAGlEC,MAAAA,WAAW,EAAE;AAHqD,KAAtE;AAAA,cAOI,KAAC,UAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,OAAO,EAAE;AAAA,eAAML,KAAK,CAAC,MAAD,CAAX;AAAA;AAFT;AAPJ,IADF;AAgBD,CApBD;;AAsBA,eAAeC,YAAf;AAEA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;;AAEA,SAASC,WAAT,QAAqC;AAAA,MAAdC,UAAc,SAAdA,UAAc;AAEnC,SACE,KAAC,IAAD;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMA,UAAU,CAACC,QAAX,CAAoB,OAApB,CAAN;AAAA,OAAf;AAAA;AAAA;AADF,IADF;AAKD","sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\n\nimport React from 'react'\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItem, DrawerItemList } from '@react-navigation/drawer'\nimport { useNavigation } from '@react-navigation/native'\n\n\nfunction CustomDrawerContent(props) {\n    return (\n      <DrawerContentScrollView {...props}>\n        <DrawerItemList {...props} />\n        <DrawerItem\n          label=\"Help\"\n          onPress={() => alert('hello')}\n        />\n      </DrawerContentScrollView>\n    );\n  }\n\nconst IntakeScreen = ({ route }) => {\n\n  const Drawer = createDrawerNavigator()\n\n  return (\n    <Drawer.Navigator drawerContent={CustomDrawerContent}  screenOptions={{\n        drawerType: 'permanent',\n\n        headerShown: false,\n    }}>\n        \n        {/* <Drawer.Screen name='IntakeStart' component={MyComponent} />       */}\n        <DrawerItem\n        label=\"Help\"\n        onPress={() => alert('test')}\n      />\n        {/* <Text>IntakeScreen</Text>\n      <Text>{route.params.userId}</Text> */}\n    </Drawer.Navigator>\n  )\n}\n\nexport default IntakeScreen\n\nconst styles = StyleSheet.create({})\n\nfunction MyComponent({ navigation }) {\n\n  return (\n    <View>\n      <Text onPress={() => navigation.navigate('Login')}>IntakeScreen</Text>\n    </View>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}