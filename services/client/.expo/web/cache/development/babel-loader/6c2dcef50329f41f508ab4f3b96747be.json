{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { Input, Button } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Container, FormInputs } from \"./LoginScreen.styles\";\nimport { useFormik } from 'formik';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              alert('login');\n            } catch (error) {\n              alert(\"Invalid Email or Password\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useFormik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      return alert(\"Email: \" + values.email + \", Password: \" + values.password);\n    }\n  }),\n      handleChange = _useFormik.handleChange,\n      handleSubmit = _useFormik.handleSubmit,\n      values = _useFormik.values;\n\n  return _jsx(Container, {\n    behavior: \"padding\",\n    children: _jsxs(FormInputs, {\n      children: [_jsx(Input, {\n        placeholder: \"Email\",\n        onChangeText: handleChange('email'),\n        leftIcon: {\n          name: \"email\"\n        }\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        onChangeText: handleChange('password'),\n        leftIcon: {\n          name: \"lock\"\n        },\n        secureTextEntry: true\n      }), _jsx(Button, {\n        containerStyle: {\n          marginHorizontal: 10,\n          marginVertical: 10\n        },\n        onPress: function onPress() {\n          return handleSubmit();\n        },\n        title: \"SIGN IN\"\n      }), _jsx(Button, {\n        type: \"outline\",\n        containerStyle: {\n          marginHorizontal: 10,\n          marginVertical: 10\n        },\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        title: \"REGISTER\"\n      })]\n    })\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/LoginScreen/LoginScreen.tsx"],"names":["React","useState","Input","Button","useNavigation","Container","FormInputs","useFormik","LoginScreen","email","setEmail","password","setPassword","navigation","handleLogin","alert","error","initialValues","onSubmit","values","handleChange","handleSubmit","name","marginHorizontal","marginVertical","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,SAAT,EAAoBC,UAApB;AAEA,SAASC,SAAT,QAA0B,QAA1B;;;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGT,aAAa,EAAhC;;AAEA,MAAMU,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClB,gBAAI;AACFC,cAAAA,KAAK,CAAC,OAAD,CAAL;AAGD,aAJD,CAIE,OAAOC,KAAP,EAAc;AACdD,cAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAUA,mBAA+CR,SAAS,CAAC;AACvDU,IAAAA,aAAa,EAAE;AAAER,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,QAAQ,EAAE;AAAvB,KADwC;AAEvDO,IAAAA,QAAQ,EAAE,kBAAAC,MAAM;AAAA,aACdJ,KAAK,aAAWI,MAAM,CAACV,KAAlB,oBAAsCU,MAAM,CAACR,QAA7C,CADS;AAAA;AAFuC,GAAD,CAAxD;AAAA,MAAQS,YAAR,cAAQA,YAAR;AAAA,MAAsBC,YAAtB,cAAsBA,YAAtB;AAAA,MAAoCF,MAApC,cAAoCA,MAApC;;AAMA,SACE,KAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,SAApB;AAAA,cACE,MAAC,UAAD;AAAA,iBACE,KAAC,KAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,YAAY,EAAEC,YAAY,CAAC,OAAD,CAF5B;AAGE,QAAA,QAAQ,EAAE;AACRE,UAAAA,IAAI,EAAE;AADE;AAHZ,QADF,EAQE,KAAC,KAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,YAAY,EAAEF,YAAY,CAAC,UAAD,CAF5B;AAGE,QAAA,QAAQ,EAAE;AACRE,UAAAA,IAAI,EAAE;AADE,SAHZ;AAME,QAAA,eAAe;AANjB,QARF,EAgBE,KAAC,MAAD;AACE,QAAA,cAAc,EAAE;AACdC,UAAAA,gBAAgB,EAAE,EADJ;AAEdC,UAAAA,cAAc,EAAE;AAFF,SADlB;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAMH,YAAY,EAAlB;AAAA,SALX;AAME,QAAA,KAAK,EAAE;AANT,QAhBF,EAwBE,KAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,cAAc,EAAE;AACdE,UAAAA,gBAAgB,EAAE,EADJ;AAEdC,UAAAA,cAAc,EAAE;AAFF,SAFlB;AAME,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoB,UAApB,CAAN;AAAA,SANX;AAOE,QAAA,KAAK,EAAE;AAPT,QAxBF;AAAA;AADF,IADF;AAsCD,CA5DD;;AA8DA,eAAejB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Input, Button } from \"react-native-elements\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { Container, FormInputs } from \"./LoginScreen.styles\"; \n\nimport { useFormik } from 'formik'\n\nimport { auth } from \"../../firebase\";\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const handleLogin = async () => {\n    try {\n      alert('login')\n      // await auth.handleLogin(email, password);\n\n    } catch (error) {\n      alert(\"Invalid Email or Password\");\n    }\n  };\n\n  const { handleChange, handleSubmit, values } = useFormik({\n    initialValues: { email: '', password: '' },\n    onSubmit: values =>\n      alert(`Email: ${values.email}, Password: ${values.password}`)\n  });\n\n  return (\n    <Container behavior=\"padding\">\n      <FormInputs>\n        <Input\n          placeholder=\"Email\"\n          onChangeText={handleChange('email')}\n          leftIcon={{\n            name: \"email\",\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          onChangeText={handleChange('password')}\n          leftIcon={{\n            name: \"lock\",\n          }}\n          secureTextEntry\n        />\n        <Button\n          containerStyle={{\n            marginHorizontal: 10,\n            marginVertical: 10,\n          }}\n          onPress={() => handleSubmit()}\n          title={\"SIGN IN\"}\n        />\n        <Button\n          type=\"outline\"\n          containerStyle={{\n            marginHorizontal: 10,\n            marginVertical: 10,\n          }}\n          onPress={() => navigation.navigate('Register')}\n          title={\"REGISTER\"}\n        />\n      </FormInputs>\n    </Container>\n  );\n};\n\nexport default LoginScreen;\n\n"]},"metadata":{},"sourceType":"module"}