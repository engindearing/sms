{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar window = Dimensions.get(\"window\");\nvar screen = Dimensions.get(\"screen\");\n\nfunction useBreakpoints() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDesktop = _useState2[0],\n      setIsDesktop = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTablet = _useState4[0],\n      setIsTablet = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isMobile = _useState6[0],\n      setIsMobile = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isMobileSm = _useState8[0],\n      setIsMobileSm = _useState8[1];\n\n  var _useState9 = useState({\n    window: window,\n    screen: screen\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dimensions = _useState10[0],\n      setDimensions = _useState10[1];\n\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener(\"change\", function (_ref) {\n      var window = _ref.window,\n          screen = _ref.screen;\n      console.log(window);\n      setDimensions({\n        window: window,\n        screen: screen\n      });\n    });\n    return function () {\n      return subscription == null ? void 0 : subscription.remove();\n    };\n  });\n}\n\nexport default useBreakpoints;\nexport var BREAKPOINT_XS = 480;\nexport var BREAKPOINT_SM = 576;\nexport var BREAKPOINT_MD = 768;\nexport var BREAKPOINT_LG = 992;\nexport var BREAKPOINT_XL = 1366;","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/hooks/useBreakpoints.ts"],"names":["useState","useEffect","window","Dimensions","get","screen","useBreakpoints","isDesktop","setIsDesktop","isTablet","setIsTablet","isMobile","setIsMobile","isMobileSm","setIsMobileSm","dimensions","setDimensions","subscription","addEventListener","console","log","remove","BREAKPOINT_XS","BREAKPOINT_SM","BREAKPOINT_MD","BREAKPOINT_LG","BREAKPOINT_XL"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,IAAMC,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;;AAGA,SAASE,cAAT,GAA0B;AACtB,kBAAmCN,QAAQ,CAAC,KAAD,CAA3C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAiCR,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAiCV,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAqCZ,QAAQ,CAAC,KAAD,CAA7C;AAAA;AAAA,MAAOa,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,mBAAoCd,QAAQ,CAAC;AAAEE,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,MAAM,EAANA;AAAV,GAAD,CAA5C;AAAA;AAAA,MAAOU,UAAP;AAAA,MAAmBC,aAAnB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,YAAgB,GAAGd,UAAU,CAACe,gBAAX,CACvB,QADuB,EAEvB,gBAAwB;AAAA,UAArBhB,MAAqB,QAArBA,MAAqB;AAAA,UAAbG,MAAa,QAAbA,MAAa;AAEpBc,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACFc,MAAAA,aAAa,CAAC;AAAEd,QAAAA,MAAM,EAANA,MAAF;AAAUG,QAAAA,MAAM,EAANA;AAAV,OAAD,CAAb;AACD,KANsB,CAAzB;AASA,WAAO;AAAA,aAAMY,YAAN,oBAAMA,YAAY,CAAEI,MAAd,EAAN;AAAA,KAAP;AACD,GAXQ,CAAT;AAaH;;AAED,eAAef,cAAf;AAEA,OAAO,IAAMgB,aAAa,GAAG,GAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,GAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,GAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,GAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,IAAtB","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { Dimensions } from 'react-native'\n\nconst window = Dimensions.get(\"window\");\nconst screen = Dimensions.get(\"screen\");\n\n\nfunction useBreakpoints() {\n    const [isDesktop, setIsDesktop ] = useState(false) \n    const [isTablet, setIsTablet ] = useState(false) \n    const [isMobile, setIsMobile ] = useState(false) \n    const [isMobileSm, setIsMobileSm ] = useState(false) \n\n    const [dimensions, setDimensions] = useState({ window, screen });\n\n    useEffect(() => {\n      const subscription:any = Dimensions.addEventListener(\n        \"change\",\n        ({ window, screen }) => {\n\n            console.log(window)\n          setDimensions({ window, screen });\n        }\n      );\n\n      return () => subscription?.remove();\n    });\n\n}\n\nexport default useBreakpoints\n\nexport const BREAKPOINT_XS = 480\nexport const BREAKPOINT_SM = 576\nexport const BREAKPOINT_MD = 768\nexport const BREAKPOINT_LG = 992\nexport const BREAKPOINT_XL = 1366\n"]},"metadata":{},"sourceType":"module"}