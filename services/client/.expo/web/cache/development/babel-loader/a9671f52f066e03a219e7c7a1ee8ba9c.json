{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { axiosWithAuth } from \"../axiosWithAuth\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var getCurrentUser = function getCurrentUser() {\n  var token, currentUser;\n  return _regeneratorRuntime.async(function getCurrentUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accessToken'));\n\n        case 2:\n          token = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axiosWithAuth(token).get('/users/me').then(function (res) {\n            return res.data.user;\n          }));\n\n        case 6:\n          currentUser = _context.sent;\n          return _context.abrupt(\"return\", currentUser);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](3);\n          throw _context.t0;\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 10]], Promise);\n};","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/auth/users/index.ts"],"names":["axiosWithAuth","AsyncStorage","getCurrentUser","getItem","token","get","then","res","data","user","currentUser"],"mappings":";AAAA,SAASA,aAAT;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACND,YAAY,CAACE,OAAb,CAAqB,aAArB,CADM;;AAAA;AACpBC,UAAAA,KADoB;AAAA;AAAA;AAAA,2CAIEJ,aAAa,CAACI,KAAD,CAAb,CAAqBC,GAArB,CAAyB,WAAzB,EAAsCC,IAAtC,CAA2C,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,CAASC,IAAb;AAAA,WAA9C,CAJF;;AAAA;AAIlBC,UAAAA,WAJkB;AAAA,2CAMfA,WANe;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { axiosWithAuth } from \"../axiosWithAuth\";\n\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nexport const getCurrentUser = async () => {\n    const token = await AsyncStorage.getItem('accessToken')\n\n    try {\n        let currentUser = await axiosWithAuth(token).get('/users/me').then(res => res.data.user)\n\n        return currentUser\n        \n    } catch (error) {\n        throw error\n    }\n}"]},"metadata":{},"sourceType":"module"}