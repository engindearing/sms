{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport Redirect from \"../../components/Redirect\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Index() {\n  var Drawer = createDrawerNavigator();\n\n  var _useGetCurrentUserQue = useGetCurrentUserQuery(),\n      _useGetCurrentUserQue2 = _slicedToArray(_useGetCurrentUserQue, 2),\n      user = _useGetCurrentUserQue2[0],\n      loading = _useGetCurrentUserQue2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(setCurrentUser(user));\n  }, [user]);\n\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Loading\"\n    });\n  }\n\n  return _jsx(Drawer.Navigator, {\n    children: _jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: TutorialScreen\n    })\n  });\n}\n\nvar RedirectUser = function RedirectUser(_ref) {\n  var role = _ref.role;\n\n  switch (role) {\n    case \"staff\":\n      return _jsx(Redirect, {\n        to: \"staff\"\n      });\n\n    default:\n      return _jsx(Redirect, {\n        to: \"Home\"\n      });\n  }\n};","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/HomeScreen/HomeScreen.tsx"],"names":["React","useEffect","useGetCurrentUserQuery","useDispatch","setCurrentUser","Redirect","createDrawerNavigator","Index","Drawer","user","loading","dispatch","TutorialScreen","RedirectUser","role"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,SAASC,sBAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT;AACA,OAAOC,QAAP;AAMA,SAAQC,qBAAR,QAAoC,0BAApC;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE9B,MAAMC,MAAM,GAAGF,qBAAqB,EAApC;;AAEA,8BAAwBJ,sBAAsB,EAA9C;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACP,cAAc,CAACK,IAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,MAAIC,OAAJ,EAAa;AACX,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACD;;AAED,SACE,KAAC,MAAD,CAAQ,SAAR;AAAA,cACG,KAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,SAAS,EAAEE;AAAtC;AADH,IADF;AAKD;;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACjC,UAAQA,IAAR;AACE,SAAK,OAAL;AACE,aAAO,KAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb,QAAP;;AAEF;AACE,aAAO,KAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb,QAAP;AALJ;AAOD,CARD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\n\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport Redirect from \"../../components/Redirect\";\n\nimport { Container } from \"./HomeScreen.styles\";\nimport { Button } from \"native-base\";\nimport { auth } from \"../../firebase\";\n\nimport {createDrawerNavigator} from '@react-navigation/drawer';\n\nexport default function Index() {\n\n  const Drawer = createDrawerNavigator()\n\n  const [user, loading] = useGetCurrentUserQuery();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setCurrentUser(user));\n  }, [user]);\n\n  if (loading) {\n    return <Text>Loading</Text>;\n  }\n\n  return (\n    <Drawer.Navigator>\n       <Drawer.Screen name=\"Home\" component={TutorialScreen} />\n    </Drawer.Navigator>\n  );\n}\n\nconst RedirectUser = ({ role }) => {\n  switch (role) {\n    case \"staff\":\n      return <Redirect to=\"staff\" />;\n\n    default:\n      return <Redirect to=\"Home\" />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}