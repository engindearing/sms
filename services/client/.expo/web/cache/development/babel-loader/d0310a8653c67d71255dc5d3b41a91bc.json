{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect } from 'react';\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from 'react-redux';\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport Redirect from \"../../components/Redirect\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Index() {\n  var _useGetCurrentUserQue = useGetCurrentUserQuery(),\n      _useGetCurrentUserQue2 = _slicedToArray(_useGetCurrentUserQue, 3),\n      user = _useGetCurrentUserQue2[0],\n      loading = _useGetCurrentUserQue2[1],\n      error = _useGetCurrentUserQue2[2];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(setCurrentUser(user));\n  }, [user]);\n\n  if (loading) {\n    return _jsx(View, {\n      children: \"Loading\"\n    });\n  }\n\n  return _jsx(RedirectUser, {\n    role: user.role\n  });\n}\n\nvar RedirectUser = function RedirectUser(_ref) {\n  var role = _ref.role;\n\n  switch (role) {\n    default:\n      return _jsx(Redirect, {\n        to: \"Login\"\n      });\n  }\n};","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/HomeScreen/HomeScreen.tsx"],"names":["React","useEffect","useGetCurrentUserQuery","useDispatch","setCurrentUser","Redirect","Index","user","loading","error","dispatch","role","RedirectUser"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAKA,SAASC,sBAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT;AAEA,OAAOC,QAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,8BAA+BJ,sBAAsB,EAArD;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;AAAA,MAAsBC,KAAtB;;AAEA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAACN,cAAc,CAACG,IAAD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,MAAGC,OAAH,EAAY;AACV,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACD;;AAED,SACI,KAAC,YAAD;AAAc,IAAA,IAAI,EAAED,IAAI,CAACI;AAAzB,IADJ;AAGD;;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAY;AAAA,MAAVD,IAAU,QAAVA,IAAU;;AAC/B,UAAOA,IAAP;AACE;AACE,aAAO,KAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb,QAAP;AAFJ;AAID,CALD","sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\nimport React, { useEffect } from 'react'\nimport { Container } from './HomeScreen.styles'\nimport { Button } from 'native-base'\nimport { auth } from '../../firebase'\n\nimport { useGetCurrentUserQuery } from '../../auth/users/useGetCurrentUserQuery'\nimport { useDispatch } from 'react-redux'\nimport { setCurrentUser } from '../../state/users/userActions'\nimport { useNavigation } from '@react-navigation/native'\nimport Redirect from '../../components/Redirect'\n  \nexport default function Index() {\n  const [user, loading, error] = useGetCurrentUserQuery()\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setCurrentUser(user))\n  }, [user])\n\n  if(loading) {\n    return <View>Loading</View>\n  }\n\n  return (\n      <RedirectUser role={user.role} />\n  )\n}\n\nconst RedirectUser = ({role}) => {\n  switch(role) {\n    default:\n      return <Redirect to='Login' />\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}