{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport styled from \"styled-components/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Drawer(_ref) {\n  var onChange = _ref.onChange,\n      children = _ref.children;\n\n  var _useState = useState(children[0].props.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  return _jsx(DrawerContainer, {\n    children: _jsx(DrawerItems, {\n      children: children.map(function (child) {\n        return React.cloneElement(child, {\n          onChange: onChange,\n          selected: selected,\n          setSelected: setSelected\n        });\n      })\n    })\n  });\n}\nexport var DrawerItem = function DrawerItem(_ref2) {\n  var icon = _ref2.icon,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,\n      _ref2$onChange = _ref2.onChange,\n      onChange = _ref2$onChange === void 0 ? null : _ref2$onChange,\n      _ref2$selected = _ref2.selected,\n      selected = _ref2$selected === void 0 ? \"\" : _ref2$selected,\n      _ref2$setSelected = _ref2.setSelected,\n      setSelected = _ref2$setSelected === void 0 ? null : _ref2$setSelected,\n      name = _ref2.name;\n  var isSelected = name === selected;\n\n  var iconColor = function iconColor() {\n    if (disabled) return 'grey';\n    if (isSelected) return 'white';else return 'black';\n  };\n\n  return _jsx(DrawerItemContainer, {\n    onPress: function onPress() {\n      setSelected(name);\n      onChange(name);\n    },\n    disabled: disabled,\n    isSelected: isSelected,\n    children: _jsx(MaterialCommunityIcons, {\n      name: icon,\n      size: 25,\n      color: iconColor()\n    })\n  });\n};\nvar DrawerContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 50;\\n  height: 100%;\\n  position: absolute;\\n  background-color: #f2f7f6;\\n\"])));\nvar DrawerItems = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  padding: 0;\\n  margin: 0;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n\"])));\nvar DrawerItemContainer = styled.TouchableOpacity(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n    margin-top: 10%;\\n    margin-bottom: 10%;\\n    padding: 12%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    width: 100%;\\n    \", \"\\n    }\\n\\n    }\\n\"])), function (props) {\n  return props.isSelected && \"\\n    background-color: black;\\n    \";\n});","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/components/Drawer/index.tsx"],"names":["styled","MaterialCommunityIcons","React","useState","Drawer","onChange","children","props","name","selected","setSelected","map","child","cloneElement","DrawerItem","icon","disabled","isSelected","iconColor","DrawerContainer","View","DrawerItems","DrawerItemContainer","TouchableOpacity"],"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,SAASC,MAAT,OAAwC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAG7C,kBAAgCH,QAAQ,CAACG,QAAQ,CAAC,CAAD,CAAR,CAAYC,KAAZ,CAAkBC,IAAnB,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,SACE,KAAC,eAAD;AAAA,cACE,KAAC,WAAD;AAAA,gBACGJ,QAAQ,CAACK,GAAT,CAAa,UAACC,KAAD;AAAA,eAGZV,KAAK,CAACW,YAAN,CAAmBD,KAAnB,EAA0B;AAAEP,UAAAA,QAAQ,EAARA,QAAF;AAAYI,UAAAA,QAAQ,EAARA,QAAZ;AAAsBC,UAAAA,WAAW,EAAXA;AAAtB,SAA1B,CAHY;AAAA,OAAb;AADH;AADF,IADF;AAWD;AAED,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,QAOpB;AAAA,MANJC,IAMI,SANJA,IAMI;AAAA,6BALJC,QAKI;AAAA,MALJA,QAKI,+BALO,KAKP;AAAA,6BAJJX,QAII;AAAA,MAJJA,QAII,+BAJO,IAIP;AAAA,6BAHJI,QAGI;AAAA,MAHJA,QAGI,+BAHO,EAGP;AAAA,gCAFJC,WAEI;AAAA,MAFJA,WAEI,kCAFU,IAEV;AAAA,MADJF,IACI,SADJA,IACI;AACJ,MAAMS,UAAU,GAAGT,IAAI,KAAKC,QAA5B;;AAEA,MAAMS,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAGF,QAAH,EAAa,OAAO,MAAP;AACb,QAAGC,UAAH,EAAe,OAAO,OAAP,CAAf,KACK,OAAO,OAAP;AACR,GAJD;;AAMA,SACE,KAAC,mBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbP,MAAAA,WAAW,CAACF,IAAD,CAAX;AACAH,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,KAJH;AAKE,IAAA,QAAQ,EAAEQ,QALZ;AAME,IAAA,UAAU,EAAEC,UANd;AAAA,cAQE,KAAC,sBAAD;AACE,MAAA,IAAI,EAAEF,IADR;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAEG,SAAS;AAHlB;AARF,IADF;AAgBD,CAhCM;AAkCP,IAAMC,eAAe,GAAGnB,MAAM,CAACoB,IAAV,gKAArB;AAOA,IAAMC,WAAW,GAAGrB,MAAM,CAACoB,IAAV,gLAAjB;AAQA,IAAME,mBAAmB,GAAGtB,MAAM,CAACuB,gBAAV,yQAQnB,UAAChB,KAAD;AAAA,SACAA,KAAK,CAACU,UAAN,0CADA;AAAA,CARmB,CAAzB","sourcesContent":["import { View, Text } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport React, { useState } from \"react\";\n\nexport function Drawer({ onChange, children }) {\n\n  //Selecting the first item by default\n  const [selected, setSelected] = useState(children[0].props.name);\n\n  return (\n    <DrawerContainer>\n      <DrawerItems>\n        {children.map((child) =>\n\n          // Need to clone element to pass down extra props\n          React.cloneElement(child, { onChange, selected, setSelected })\n        )}\n      </DrawerItems>\n    </DrawerContainer>\n  );\n}\n\nexport const DrawerItem = ({\n  icon,\n  disabled = false,\n  onChange = null,\n  selected = \"\",\n  setSelected = null,\n  name,\n}) => {\n  const isSelected = name === selected\n\n  const iconColor = () => {\n      if(disabled) return 'grey'\n      if(isSelected) return 'white'\n      else return 'black'\n  }\n\n  return (\n    <DrawerItemContainer\n      onPress={() => {\n        setSelected(name);\n        onChange(name);\n      }}\n      disabled={disabled}\n      isSelected={isSelected}\n    >\n      <MaterialCommunityIcons\n        name={icon}\n        size={25}\n        color={iconColor()}\n      />\n    </DrawerItemContainer>\n  );\n};\n\nconst DrawerContainer = styled.View`\n  width: 50;\n  height: 100%;\n  position: absolute;\n  background-color: #f2f7f6;\n`;\n\nconst DrawerItems = styled.View`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst DrawerItemContainer = styled.TouchableOpacity`\n    margin-top: 10%;\n    margin-bottom: 10%;\n    padding: 12%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    ${(props) =>\n      props.isSelected &&\n    `\n    background-color: black;\n    `}\n    }\n\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}