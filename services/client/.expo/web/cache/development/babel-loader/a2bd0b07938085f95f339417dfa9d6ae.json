{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/screens/LoginScreen/LoginScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AppleAuthenticationButton, AppleAuthenticationButtonType, AppleAuthenticationButtonStyle } from 'expo-apple-authentication';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useAppleAuthentication from \"../../hooks/auth/useAppleAuthentication\";\nexport default function Login() {\n  var _useAppleAuthenticati = useAppleAuthentication(),\n      _useAppleAuthenticati2 = _slicedToArray(_useAppleAuthenticati, 2),\n      appleAuthAvailable = _useAppleAuthenticati2[0],\n      authWithApple = _useAppleAuthenticati2[1];\n\n  function loginWithApple() {\n    var _await$authWithApple, _await$authWithApple2, credential, data;\n\n    return _regeneratorRuntime.async(function loginWithApple$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(authWithApple());\n\n          case 3:\n            _await$authWithApple = _context.sent;\n            _await$authWithApple2 = _slicedToArray(_await$authWithApple, 2);\n            credential = _await$authWithApple2[0];\n            data = _await$authWithApple2[1];\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            alert('Error Something went wrong. Please try again later.');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Login\"), appleAuthAvailable && React.createElement(AppleAuthenticationButton, {\n    buttonType: AppleAuthenticationButtonType.SIGN_IN,\n    buttonStyle: AppleAuthenticationButtonStyle.BLACK,\n    cornerRadius: 5,\n    style: {\n      width: '100%',\n      height: 48,\n      marginTop: 16\n    },\n    onPress: loginWithApple,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }));\n}\nvar StyledView = React.createElement(Styled, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 20\n  }\n});","map":{"version":3,"sources":["/home/screens/LoginScreen/LoginScreen.tsx"],"names":["AppleAuthenticationButton","AppleAuthenticationButtonType","AppleAuthenticationButtonStyle","React","useAppleAuthentication","Login","appleAuthAvailable","authWithApple","loginWithApple","credential","data","console","error","alert","SIGN_IN","BLACK","width","height","marginTop","StyledView"],"mappings":";;;AAAA,SAASA,yBAAT,EAAoCC,6BAApC,EAAmEC,8BAAnE,QAAyG,2BAAzG;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,sBAAP;AAIA,eAAe,SAASC,KAAT,GAAiB;AAC9B,8BAA4CD,sBAAsB,EAAlE;AAAA;AAAA,MAAOE,kBAAP;AAAA,MAA2BC,aAA3B;;AAEA,WAAeC,cAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEqCD,aAAa,EAFlD;;AAAA;AAAA;AAAA;AAEWE,YAAAA,UAFX;AAEuBC,YAAAA,IAFvB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIC,YAAAA,OAAO,CAACC,KAAR;AACAC,YAAAA,KAAK,CAAC,qDAAD,CAAL;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGP,kBAAkB,IACjB,oBAAC,yBAAD;AACE,IAAA,UAAU,EAAEL,6BAA6B,CAACa,OAD5C;AAEE,IAAA,WAAW,EAAEZ,8BAA8B,CAACa,KAF9C;AAGE,IAAA,YAAY,EAAE,CAHhB;AAIE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,EAFH;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAJT;AASE,IAAA,OAAO,EAAEV,cATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAmBD;AAED,IAAMW,UAAU,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnB","sourcesContent":["import { AppleAuthenticationButton, AppleAuthenticationButtonType, AppleAuthenticationButtonStyle } from 'expo-apple-authentication';\nimport React from 'react';\nimport { Text, View } from 'react-native';\nimport useAppleAuthentication from '../../hooks/auth/useAppleAuthentication';\n\nimport styled from 'styled-components/native'\n\nexport default function Login() {\n  const [appleAuthAvailable, authWithApple] = useAppleAuthentication();\n\n  async function loginWithApple() {\n    try {\n      const [credential, data] = await authWithApple();\n      // await login(credential, data);\n    } catch (error: any) {\n      console.error(error);\n      alert('Error Something went wrong. Please try again later.');\n    }\n  }\n\n\n  return (\n    <View>\n      <Text>Login</Text>\n      {appleAuthAvailable && (\n        <AppleAuthenticationButton\n          buttonType={AppleAuthenticationButtonType.SIGN_IN}\n          buttonStyle={AppleAuthenticationButtonStyle.BLACK}\n          cornerRadius={5}\n          style={{\n            width: '100%',\n            height: 48,\n            marginTop: 16\n          }}\n          onPress={loginWithApple}\n        />\n      )\n      }\n    </View>\n  )\n}\n\nconst StyledView = <Styled></Styled>"]},"metadata":{},"sourceType":"module"}