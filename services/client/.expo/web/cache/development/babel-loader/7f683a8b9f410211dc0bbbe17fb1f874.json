{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Button } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Container, FormInputs } from \"./RegisterScreen.styles\";\nimport { useFormik } from \"formik\";\n1;\nimport RegisterFormSchema from \"./RegisterFormSchema\";\nimport TextInput from \"../../components/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var _useFormik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: RegisterFormSchema,\n    onSubmit: function onSubmit(values) {\n      return alert(\"Email: \" + values.email + \", Password: \" + values.password);\n    }\n  }),\n      handleChange = _useFormik.handleChange,\n      handleSubmit = _useFormik.handleSubmit,\n      values = _useFormik.values,\n      handleBlur = _useFormik.handleBlur,\n      errors = _useFormik.errors,\n      touched = _useFormik.touched;\n\n  return _jsx(Container, {\n    behavior: \"padding\",\n    children: _jsxs(FormInputs, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        icon: \"email\",\n        onChangeText: handleChange(\"email\"),\n        onBlur: handleBlur(\"email\"),\n        error: errors.email,\n        touched: touched.email\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Password\",\n        icon: \"lock\",\n        onChangeText: handleChange(\"password\"),\n        onBlur: handleBlur(\"password\"),\n        error: errors.password,\n        touched: touched.password\n      }), _jsx(TextInput, {\n        placeholder: \"Confirm Password\",\n        icon: \"lock\",\n        onChangeText: handleChange(\"confirmPassword\"),\n        onBlur: handleBlur(\"password\"),\n        error: errors.password,\n        touched: touched.password\n      }), _jsx(Button, {\n        style: {\n          marginTop: \"3%\"\n        },\n        onPress: function onPress() {\n          return handleSubmit();\n        },\n        children: \"Sign in\"\n      }), _jsx(Button, {\n        style: {\n          marginTop: \"3%\"\n        },\n        variant: \"outline\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Register\");\n        },\n        children: \"Register\"\n      })]\n    })\n  });\n};\n\nexport default RegisterScreen;","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/RegisterScreen/RegisterScreen.tsx"],"names":["React","useState","Button","useNavigation","Container","FormInputs","useFormik","RegisterFormSchema","TextInput","RegisterScreen","email","setEmail","password","setPassword","navigation","initialValues","validationSchema","onSubmit","values","alert","handleChange","handleSubmit","handleBlur","errors","touched","marginTop","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,SAAT,EAAoBC,UAApB;AAEA,SAASC,SAAT,QAA0B,QAA1B;AAGA;AACA,OAAOC,kBAAP;AACA,OAAOC,SAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;;AAEA,mBACEG,SAAS,CAAC;AACRS,IAAAA,aAAa,EAAE;AAAEL,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,QAAQ,EAAE;AAAvB,KADP;AAERI,IAAAA,gBAAgB,EAAET,kBAFV;AAGRU,IAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aACRC,KAAK,aAAWD,MAAM,CAACR,KAAlB,oBAAsCQ,MAAM,CAACN,QAA7C,CADG;AAAA;AAHF,GAAD,CADX;AAAA,MAAQQ,YAAR,cAAQA,YAAR;AAAA,MAAsBC,YAAtB,cAAsBA,YAAtB;AAAA,MAAoCH,MAApC,cAAoCA,MAApC;AAAA,MAA4CI,UAA5C,cAA4CA,UAA5C;AAAA,MAAwDC,MAAxD,cAAwDA,MAAxD;AAAA,MAAgEC,OAAhE,cAAgEA,OAAhE;;AAQA,SACE,KAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,SAApB;AAAA,cACE,MAAC,UAAD;AAAA,iBACE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,YAAY,EAAEJ,YAAY,CAAC,OAAD,CAH5B;AAIE,QAAA,MAAM,EAAEE,UAAU,CAAC,OAAD,CAJpB;AAKE,QAAA,KAAK,EAAEC,MAAM,CAACb,KALhB;AAME,QAAA,OAAO,EAAEc,OAAO,CAACd;AANnB,QADF,EAUE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,gBADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAEU,YAAY,CAAC,UAAD,CAH5B;AAIE,QAAA,MAAM,EAAEE,UAAU,CAAC,UAAD,CAJpB;AAKE,QAAA,KAAK,EAAEC,MAAM,CAACX,QALhB;AAME,QAAA,OAAO,EAAEY,OAAO,CAACZ;AANnB,QAVF,EAmBE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAEQ,YAAY,CAAC,iBAAD,CAH5B;AAIE,QAAA,MAAM,EAAEE,UAAU,CAAC,UAAD,CAJpB;AAKE,QAAA,KAAK,EAAEC,MAAM,CAACX,QALhB;AAME,QAAA,OAAO,EAAEY,OAAO,CAACZ;AANnB,QAnBF,EA4BE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEa,UAAAA,SAAS,EAAE;AAAb,SAAf;AAAoC,QAAA,OAAO,EAAE;AAAA,iBAAMJ,YAAY,EAAlB;AAAA,SAA7C;AAAA;AAAA,QA5BF,EA+BE,KAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,SAAS,EAAE;AAAb,SADT;AAEE,QAAA,OAAO,EAAE,SAFX;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoB,UAApB,CAAN;AAAA,SAHX;AAAA;AAAA,QA/BF;AAAA;AADF,IADF;AA2CD,CAzDD;;AA2DA,eAAejB,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Button } from \"native-base\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { Container, FormInputs } from \"./RegisterScreen.styles\";\n\nimport { useFormik } from \"formik\";\n\nimport { auth } from \"../../firebase\";\n1;\nimport RegisterFormSchema from \"./RegisterFormSchema\";\nimport TextInput from \"../../components/TextInput\";\n\nconst RegisterScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const { handleChange, handleSubmit, values, handleBlur, errors, touched } =\n    useFormik({\n      initialValues: { email: \"\", password: \"\" },\n      validationSchema: RegisterFormSchema,\n      onSubmit: (values) =>\n        alert(`Email: ${values.email}, Password: ${values.password}`),\n    });\n\n  return (\n    <Container behavior=\"padding\">\n      <FormInputs>\n        <TextInput\n          placeholder=\"Email\"\n          icon=\"email\"\n          onChangeText={handleChange(\"email\")}\n          onBlur={handleBlur(\"email\")}\n          error={errors.email}\n          touched={touched.email}\n        />\n\n        <TextInput\n          placeholder=\"Enter Password\"\n          icon=\"lock\"\n          onChangeText={handleChange(\"password\")}\n          onBlur={handleBlur(\"password\")}\n          error={errors.password}\n          touched={touched.password}\n        />\n\n        <TextInput\n          placeholder=\"Confirm Password\"\n          icon=\"lock\"\n          onChangeText={handleChange(\"confirmPassword\")}\n          onBlur={handleBlur(\"password\")}\n          error={errors.password}\n          touched={touched.password}\n        />\n\n        <Button style={{ marginTop: \"3%\" }} onPress={() => handleSubmit()}>\n          Sign in\n        </Button>\n        <Button\n          style={{ marginTop: \"3%\" }}\n          variant={\"outline\"}\n          onPress={() => navigation.navigate(\"Register\")}\n        >\n          Register\n        </Button>\n      </FormInputs>\n    </Container>\n  );\n};\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}