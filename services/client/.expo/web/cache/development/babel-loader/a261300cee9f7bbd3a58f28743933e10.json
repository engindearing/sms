{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport RenderScreens from \"./components/Screens/RenderScreens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GuestScreen() {\n  var _useState = useState(\"check-in\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentScreen = _useState2[0],\n      setCurrentScreen = _useState2[1];\n\n  var shelterId = \"6266e30642cf540fcde0cb62\";\n  var props = {\n    currentScreen: currentScreen,\n    setCurrentScreen: setCurrentScreen\n  };\n  return _jsxs(View, {\n    children: [_jsx(Navigation, _objectSpread({}, props)), _jsx(RenderScreens, _objectSpread({}, props))]\n  });\n}","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/GuestScreen/GuestScreen.tsx"],"names":["React","useState","Navigation","RenderScreens","GuestScreen","currentScreen","setCurrentScreen","shelterId","props"],"mappings":";;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAIA,OAAOC,UAAP;AACA,OAAOC,aAAP;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,kBAA0CH,QAAQ,CAAC,UAAD,CAAlD;AAAA;AAAA,MAAOI,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,SAAS,GAAG,0BAAlB;AAEA,MAAMC,KAAK,GAAG;AACZH,IAAAA,aAAa,EAAbA,aADY;AAEZC,IAAAA,gBAAgB,EAAhBA;AAFY,GAAd;AAKA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,UAAD,oBAAgBE,KAAhB,EADF,EAEE,KAAC,aAAD,oBAAmBA,KAAnB,EAFF;AAAA,IADF;AAMD","sourcesContent":["import { View, Text } from \"react-native\";\n\nimport React, { useState } from \"react\";\n\nimport { Drawer, DrawerItem } from \"../../components/Drawer\";\n\nimport Navigation from \"./components/Navigation\";\nimport RenderScreens from \"./components/Screens/RenderScreens\";\n\nexport default function GuestScreen() {\n  const [currentScreen, setCurrentScreen] = useState(\"check-in\");\n\n  const shelterId = \"6266e30642cf540fcde0cb62\"\n\n  const props = {\n    currentScreen,\n    setCurrentScreen,\n  };\n\n  return (\n    <View>\n      <Navigation {...props} />\n      <RenderScreens {...props} />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}