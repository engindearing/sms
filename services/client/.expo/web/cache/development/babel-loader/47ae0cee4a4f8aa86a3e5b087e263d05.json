{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Index() {\n  var _useGetCurrentUserQue = useGetCurrentUserQuery(),\n      _useGetCurrentUserQue2 = _slicedToArray(_useGetCurrentUserQue, 2),\n      user = _useGetCurrentUserQue2[0],\n      loading = _useGetCurrentUserQue2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (user) {\n      dispatch(setCurrentUser(user));\n    }\n  }, [user]);\n\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Loading\"\n    });\n  }\n\n  return _jsx(RedirectUser, {\n    user: user\n  });\n}\n\nvar RedirectUser = function RedirectUser(_ref) {\n  var user = _ref.user;\n  var navigation = useNavigation();\n  useEffect(function () {\n    switch (user.role) {\n      case 'programManager':\n        navigation.navigate('login');\n    }\n  }, []);\n  return _jsx(Text, {\n    children: \"/\"\n  });\n};","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/HomeScreen/HomeScreen.tsx"],"names":["React","useEffect","useGetCurrentUserQuery","useDispatch","setCurrentUser","useNavigation","Index","user","loading","dispatch","RedirectUser","navigation","role","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,SAASC,sBAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAE9B,8BAAwBJ,sBAAsB,EAA9C;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGM,IAAH,EAAS;AACPE,MAAAA,QAAQ,CAACL,cAAc,CAACG,IAAD,CAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;;AAMA,MAAIC,OAAJ,EAAa;AACX,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACD;;AAED,SACE,KAAC,YAAD;AAAc,IAAA,IAAI,EAAED;AAApB,IADF;AAGD;;AAED,IAAMG,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA,MAAXH,IAAW,QAAXA,IAAW;AAEjC,MAAMI,UAAU,GAAGN,aAAa,EAAhC;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AAEd,YAAOM,IAAI,CAACK,IAAZ;AACE,WAAK,gBAAL;AACED,QAAAA,UAAU,CAACE,QAAX,CAAoB,OAApB;AAFJ;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,SACE,KAAC,IAAD;AAAA;AAAA,IADF;AAGD,CAhBD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\n\nimport { useGetCurrentUserQuery } from \"../../auth/users/useGetCurrentUserQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../../state/users/userActions\";\nimport Redirect from \"../../components/Redirect\";\nimport { useNavigation } from \"@react-navigation/native\";\n\n\nexport default function Index() {\n\n  const [user, loading] = useGetCurrentUserQuery();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(user) {\n      dispatch(setCurrentUser(user));\n    }\n  }, [user]);\n\n  if (loading) {\n    return <Text>Loading</Text>;\n  }\n\n  return (\n    <RedirectUser user={user} />\n  );\n}\n\nconst RedirectUser = ({ user }) => {\n\n  const navigation = useNavigation()\n\n  useEffect(() => {\n\n    switch(user.role) {\n      case 'programManager':\n        navigation.navigate('login')\n      \n    }\n  }, [])\n\n  return (\n    <Text>/</Text>\n  )\n};\n\n"]},"metadata":{},"sourceType":"module"}