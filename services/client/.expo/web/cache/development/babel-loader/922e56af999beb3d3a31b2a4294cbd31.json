{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport styled from 'styled-components/native';\nimport { Input, Button } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              alert('login');\n            } catch (error) {\n              alert(\"Invalid Email or Password\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(FormContainer, {\n      children: [_jsx(Input, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        leftIcon: {\n          name: \"email\"\n        }\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        leftIcon: {\n          name: \"lock\"\n        },\n        secureTextEntry: true\n      }), _jsx(Button, {\n        containerStyle: {\n          marginHorizontal: 10,\n          marginVertical: 10\n        },\n        onPress: handleLogin,\n        title: \"SIGN IN\"\n      }), _jsx(Button, {\n        type: \"outline\",\n        containerStyle: {\n          marginHorizontal: 10,\n          marginVertical: 10\n        },\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        title: \"REGISTER\"\n      })]\n    }), _jsx(Text, {\n      children: \"Forgot Passowrd?\"\n    })]\n  });\n};\n\nvar FormContainer = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 40%\\n\\n  \", \"\\n\\n  \", \"\\n\\n\"])), function (props) {\n  return props.theme.isTablet && 'width: 70%;';\n}, function (props) {\n  return props.theme.isMobileL && 'width: 0%;';\n});\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    width: \"30%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: \"#0782F9\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/LoginScreen/LoginScreen.tsx"],"names":["React","useState","styled","Input","Button","useNavigation","LoginScreen","email","setEmail","password","setPassword","navigation","handleLogin","alert","error","styles","container","text","name","marginHorizontal","marginVertical","navigate","FormContainer","View","props","theme","isTablet","isMobileL","StyleSheet","create","flex","justifyContent","alignItems","inputContainer","width","input","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","buttonContainer","button","padding","buttonOutline","borderColor","borderWidth","buttonText","color","fontWeight","fontSize","buttonOutlineText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport styled from 'styled-components/native'\n\nimport { Input, Button, Icon } from \"react-native-elements\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport { auth } from \"../../firebase\";\n\nimport useBreakpoints from \"../../hooks/useBreakpoints\";\n\nconst LoginScreen = () => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const handleLogin = async () => {\n    try {\n      alert('login')\n      // await auth.handleLogin(email, password);\n\n    } catch (error) {\n      alert(\"Invalid Email or Password\");\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n      <FormContainer>\n        <Input\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          leftIcon={{\n            name: \"email\",\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          leftIcon={{\n            name: \"lock\",\n          }}\n          secureTextEntry\n        />\n        <Button\n          containerStyle={{\n            marginHorizontal: 10,\n            marginVertical: 10,\n          }}\n          onPress={handleLogin}\n          title={\"SIGN IN\"}\n        />\n        <Button\n          type=\"outline\"\n          containerStyle={{\n            marginHorizontal: 10,\n            marginVertical: 10,\n          }}\n          onPress={() => navigation.navigate('Register')}\n          title={\"REGISTER\"}\n        />\n      </FormContainer>\n\n      <Text>Forgot Passowrd?</Text>\n\n    </KeyboardAvoidingView>\n  );\n};\n\nconst FormContainer = styled.View`\n  width: 40%\n\n  ${props => props.theme.isTablet && \n    'width: 70%;'\n  }\n\n  ${props => props.theme.isMobileL && \n    'width: 0%;'\n  }\n\n`\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inputContainer: {\n    width: \"30%\",\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5,\n  },\n  buttonContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: \"#0782F9\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n});"]},"metadata":{},"sourceType":"module"}