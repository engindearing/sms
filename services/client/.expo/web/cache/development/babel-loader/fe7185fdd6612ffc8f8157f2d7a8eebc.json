{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { Input, Button } from \"react-native-elements\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Container, FormInputs } from \"./LoginScreen.styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var handleLogin = function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              alert('login');\n            } catch (error) {\n              alert(\"Invalid Email or Password\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Container, {\n    behavior: \"padding\",\n    children: [_jsxs(FormInputs, {\n      children: [_jsx(Input, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        leftIcon: {\n          name: \"email\"\n        }\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        leftIcon: {\n          name: \"lock\"\n        },\n        secureTextEntry: true\n      }), _jsx(Button, {\n        containerStyle: {\n          marginHorizontal: 10,\n          marginVertical: 10\n        },\n        onPress: handleLogin,\n        title: \"SIGN IN\"\n      }), _jsx(Button, {\n        type: \"outline\",\n        containerStyle: {\n          marginHorizontal: 10,\n          marginVertical: 10\n        },\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        title: \"REGISTER\"\n      })]\n    }), _jsx(Text, {\n      children: \"Forgot Passowrd?\"\n    })]\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/LoginScreen/LoginScreen.tsx"],"names":["React","useState","Input","Button","useNavigation","Container","FormInputs","LoginScreen","email","setEmail","password","setPassword","navigation","handleLogin","alert","error","text","name","marginHorizontal","marginVertical","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAIA,SAASC,KAAT,EAAgBC,MAAhB,QAAoC,uBAApC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AASA,SAASC,SAAT,EAAoBC,UAApB;;;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExB,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;;AAEA,MAAMS,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClB,gBAAI;AACFC,cAAAA,KAAK,CAAC,OAAD,CAAL;AAGD,aAJD,CAIE,OAAOC,KAAP,EAAc;AACdD,cAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAUA,SACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,SAApB;AAAA,eACE,MAAC,UAAD;AAAA,iBACE,KAAC,KAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,KAAK,EAAEN,KAFT;AAGE,QAAA,YAAY,EAAE,sBAACQ,IAAD;AAAA,iBAAUP,QAAQ,CAACO,IAAD,CAAlB;AAAA,SAHhB;AAIE,QAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE;AADE;AAJZ,QADF,EASE,KAAC,KAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,KAAK,EAAEP,QAFT;AAGE,QAAA,YAAY,EAAE,sBAACM,IAAD;AAAA,iBAAUL,WAAW,CAACK,IAAD,CAArB;AAAA,SAHhB;AAIE,QAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE;AADE,SAJZ;AAOE,QAAA,eAAe;AAPjB,QATF,EAkBE,KAAC,MAAD;AACE,QAAA,cAAc,EAAE;AACdC,UAAAA,gBAAgB,EAAE,EADJ;AAEdC,UAAAA,cAAc,EAAE;AAFF,SADlB;AAKE,QAAA,OAAO,EAAEN,WALX;AAME,QAAA,KAAK,EAAE;AANT,QAlBF,EA0BE,KAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,cAAc,EAAE;AACdK,UAAAA,gBAAgB,EAAE,EADJ;AAEdC,UAAAA,cAAc,EAAE;AAFF,SAFlB;AAME,QAAA,OAAO,EAAE;AAAA,iBAAMP,UAAU,CAACQ,QAAX,CAAoB,UAApB,CAAN;AAAA,SANX;AAOE,QAAA,KAAK,EAAE;AAPT,QA1BF;AAAA,MADF,EAsCE,KAAC,IAAD;AAAA;AAAA,MAtCF;AAAA,IADF;AA2CD,CA5DD;;AA8DA,eAAeb,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport styled from 'styled-components/native'\n\nimport { Input, Button, Icon } from \"react-native-elements\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n} from \"react-native\";\n\n\nimport { Container, FormInputs } from \"./LoginScreen.styles\"; \n\nimport { auth } from \"../../firebase\";\n\nimport useBreakpoints from \"../../hooks/useBreakpoints\";\n\nconst LoginScreen = () => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const handleLogin = async () => {\n    try {\n      alert('login')\n      // await auth.handleLogin(email, password);\n\n    } catch (error) {\n      alert(\"Invalid Email or Password\");\n    }\n  };\n\n  return (\n    <Container behavior=\"padding\">\n      <FormInputs>\n        <Input\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          leftIcon={{\n            name: \"email\",\n          }}\n        />\n        <Input\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          leftIcon={{\n            name: \"lock\",\n          }}\n          secureTextEntry\n        />\n        <Button\n          containerStyle={{\n            marginHorizontal: 10,\n            marginVertical: 10,\n          }}\n          onPress={handleLogin}\n          title={\"SIGN IN\"}\n        />\n        <Button\n          type=\"outline\"\n          containerStyle={{\n            marginHorizontal: 10,\n            marginVertical: 10,\n          }}\n          onPress={() => navigation.navigate('Register')}\n          title={\"REGISTER\"}\n        />\n      </FormInputs>\n\n      <Text>Forgot Passowrd?</Text>\n\n    </Container>\n  );\n};\n\nexport default LoginScreen;\n\n"]},"metadata":{},"sourceType":"module"}