{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styled from \"styled-components/native\";\nimport React, { useState } from \"react\";\nimport { Select } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar index = function index() {\n  var windowHeight = Dimensions.get(\"window\").windowHeight;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      service = _React$useState2[0],\n      setService = _React$useState2[1];\n\n  return _jsx(View, {\n    children: _jsx(Container, {\n      windowHeight: windowHeight,\n      children: _jsxs(Select, {\n        selectedValue: service,\n        minWidth: \"200\",\n        accessibilityLabel: \"Choose Service\",\n        placeholder: \"Choose Service\",\n        _selectedItem: {\n          bg: \"teal.600\"\n        },\n        mt: 1,\n        onValueChange: function onValueChange(itemValue) {\n          return setService(itemValue);\n        },\n        children: [_jsx(Select.Item, {\n          label: \"1\",\n          value: \"ux\"\n        }), _jsx(Select.Item, {\n          label: \"2\",\n          value: \"web\"\n        }), _jsx(Select.Item, {\n          label: \"3\",\n          value: \"cross\"\n        }), _jsx(Select.Item, {\n          label: \"\",\n          value: \"ui\"\n        }), _jsx(Select.Item, {\n          label: \"Backend Development\",\n          value: \"backend\"\n        })]\n      })\n    })\n  });\n};\n\nexport default index;\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n\\n  display: flex;\\n\\n  justify-content: center;\\n\\n  align-items: center;\\n\\n  height: \", \";\\n\"])), function (props) {\n  return props.windowHeight;\n});","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/GuestScreen/components/Screens/CheckIn/index.jsx"],"names":["styled","React","useState","Select","index","windowHeight","Dimensions","get","service","setService","bg","itemValue","Container","View","props"],"mappings":";;;;;;;;AAEA,OAAOA,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,aAAvB;;;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,YAA9C;;AAGA,wBAA4BJ,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAKM,OAAL;AAAA,MAAcC,UAAd;;AAEA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,SAAD;AAAW,MAAA,YAAY,EAAEJ,YAAzB;AAAA,gBACA,MAAC,MAAD;AAAQ,QAAA,aAAa,EAAEG,OAAvB;AAAgC,QAAA,QAAQ,EAAC,KAAzC;AAA+C,QAAA,kBAAkB,EAAC,gBAAlE;AAAmF,QAAA,WAAW,EAAC,gBAA/F;AAAgH,QAAA,aAAa,EAAE;AAC7HE,UAAAA,EAAE,EAAE;AADyH,SAA/H;AAEG,QAAA,EAAE,EAAE,CAFP;AAEU,QAAA,aAAa,EAAE,uBAAAC,SAAS;AAAA,iBAAIF,UAAU,CAACE,SAAD,CAAd;AAAA,SAFlC;AAAA,mBAGI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,GAAnB;AAAuB,UAAA,KAAK,EAAC;AAA7B,UAHJ,EAII,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,GAAnB;AAAuB,UAAA,KAAK,EAAC;AAA7B,UAJJ,EAKI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,GAAnB;AAAuB,UAAA,KAAK,EAAC;AAA7B,UALJ,EAMI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,EAAnB;AAAsB,UAAA,KAAK,EAAC;AAA5B,UANJ,EAOI,KAAC,MAAD,CAAQ,IAAR;AAAa,UAAA,KAAK,EAAC,qBAAnB;AAAyC,UAAA,KAAK,EAAC;AAA/C,UAPJ;AAAA;AADA;AADF,IADF;AAeD,CArBD;;AAuBA,eAAeP,KAAf;AAEA,IAAMQ,SAAS,GAAGZ,MAAM,CAACa,IAAV,4LASH,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACT,YAAjB;AAAA,CATG,CAAf","sourcesContent":["import { View, Text, Dimensions } from \"react-native\";\n\nimport styled from \"styled-components/native\";\n\nimport React, { useState } from \"react\";\n\nimport { Select } from \"native-base\";\n\n\nconst index = () => {\n  const windowHeight = Dimensions.get(\"window\").windowHeight;\n\n\n  let [service, setService] = React.useState(\"\");\n\n  return (\n    <View>\n      <Container windowHeight={windowHeight}>\n      <Select selectedValue={service} minWidth=\"200\" accessibilityLabel=\"Choose Service\" placeholder=\"Choose Service\" _selectedItem={{\n        bg: \"teal.600\",\n      }} mt={1} onValueChange={itemValue => setService(itemValue)}>\n          <Select.Item label=\"1\" value=\"ux\" />\n          <Select.Item label=\"2\" value=\"web\" />\n          <Select.Item label=\"3\" value=\"cross\" />\n          <Select.Item label=\"\" value=\"ui\" />\n          <Select.Item label=\"Backend Development\" value=\"backend\" />\n        </Select>\n      </Container>\n    </View>\n  );\n};\n\nexport default index;\n\nconst Container = styled.View`\n  width: 100%;\n\n  display: flex;\n\n  justify-content: center;\n\n  align-items: center;\n\n  height: ${(props) => props.windowHeight};\n`;\n"]},"metadata":{},"sourceType":"module"}