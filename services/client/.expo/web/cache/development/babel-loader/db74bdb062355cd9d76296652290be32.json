{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function useMediaQuery(_ref) {\n  var width = _ref.width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      matched = _useState2[0],\n      setMatched = _useState2[1];\n\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener(\"change\", function (_ref2) {\n      var window = _ref2.window;\n\n      if (window.width <= width) {\n        setMatched(true);\n      } else {\n        setMatched(false);\n      }\n    });\n    return function () {\n      return subscription == null ? void 0 : subscription.remove();\n    };\n  }, []);\n  return matched;\n}","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/hooks/useMediaQuery.ts"],"names":["useEffect","useState","useMediaQuery","width","matched","setMatched","subscription","Dimensions","addEventListener","window","remove"],"mappings":";AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAIA,eAAe,SAASC,aAAT,OAAkC;AAAA,MAATC,KAAS,QAATA,KAAS;;AAC7C,kBAA8BF,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMM,YAAgB,GAAGC,UAAU,CAACC,gBAAX,CACvB,QADuB,EAEvB,iBAAgB;AAAA,UAAbC,MAAa,SAAbA,MAAa;;AAEd,UAAGA,MAAM,CAACN,KAAP,IAAgBA,KAAnB,EAA0B;AACtBE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OAFD,MAII;AACAA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACF,KAXsB,CAAzB;AAaA,WAAO;AAAA,aAAMC,YAAN,oBAAMA,YAAY,CAAEI,MAAd,EAAN;AAAA,KAAP;AACD,GAfM,EAeJ,EAfI,CAAT;AAiBE,SAAON,OAAP;AACL","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { Dimensions } from 'react-native'\n\nexport default function useMediaQuery({ width }) {\n    const [matched, setMatched] = useState(false)\n\n    useEffect(() => {\n        const subscription:any = Dimensions.addEventListener(\n          \"change\",\n          ({ window }) => {\n\n            if(window.width <= width) {\n                setMatched(true)\n            }\n\n            else{\n                setMatched(false)\n            }\n          }\n        );\n        return () => subscription?.remove();\n      }, []); \n\n      return matched;\n}\n"]},"metadata":{},"sourceType":"module"}