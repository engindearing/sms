{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AppleAuthenticationButton, AppleAuthenticationButtonType, AppleAuthenticationButtonStyle } from 'expo-apple-authentication';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useAppleAuthentication from \"../../hooks/auth/useAppleAuthentication\";\nimport EStyleSheet from 'react-native-extended-stylesheet';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useAppleAuthenticati = useAppleAuthentication(),\n      _useAppleAuthenticati2 = _slicedToArray(_useAppleAuthenticati, 2),\n      appleAuthAvailable = _useAppleAuthenticati2[0],\n      authWithApple = _useAppleAuthenticati2[1];\n\n  function loginWithApple() {\n    var _await$authWithApple, _await$authWithApple2, credential, data;\n\n    return _regeneratorRuntime.async(function loginWithApple$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(authWithApple());\n\n          case 3:\n            _await$authWithApple = _context.sent;\n            _await$authWithApple2 = _slicedToArray(_await$authWithApple, 2);\n            credential = _await$authWithApple2[0];\n            data = _await$authWithApple2[1];\n            console.log(credential);\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            alert('Error Something went wrong. Please try again later.');\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.hello,\n      children: \"Login\"\n    }), appleAuthAvailable && _jsx(AppleAuthenticationButton, {\n      buttonType: AppleAuthenticationButtonType.SIGN_IN,\n      buttonStyle: AppleAuthenticationButtonStyle.BLACK,\n      cornerRadius: 5,\n      style: {\n        width: '100%',\n        height: 48,\n        marginTop: 16\n      },\n      onPress: loginWithApple\n    })]\n  });\n}\nvar styles = EStyleSheet.create({\n  hello: {\n    color: 'red'\n  },\n  '@media (max-width: 1500px)': {\n    hello: {\n      color: 'purple'\n    }\n  }\n});","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/LoginScreen/LoginScreen.tsx"],"names":["AppleAuthenticationButton","AppleAuthenticationButtonType","AppleAuthenticationButtonStyle","React","useAppleAuthentication","EStyleSheet","Login","appleAuthAvailable","authWithApple","loginWithApple","credential","data","console","log","error","alert","styles","hello","SIGN_IN","BLACK","width","height","marginTop","create","color"],"mappings":";;AAAA,SAASA,yBAAT,EAAoCC,6BAApC,EAAmEC,8BAAnE,QAAyG,2BAAzG;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,sBAAP;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,8BAA4CF,sBAAsB,EAAlE;AAAA;AAAA,MAAOG,kBAAP;AAAA,MAA2BC,aAA3B;;AAEA,WAAeC,cAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEqCD,aAAa,EAFlD;;AAAA;AAAA;AAAA;AAEWE,YAAAA,UAFX;AAEuBC,YAAAA,IAFvB;AAGIC,YAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAHJ;AAAA;;AAAA;AAAA;AAAA;AAMIE,YAAAA,OAAO,CAACE,KAAR;AACAC,YAAAA,KAAK,CAAC,qDAAD,CAAL;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA,MADF,EAEGV,kBAAkB,IACjB,KAAC,yBAAD;AACE,MAAA,UAAU,EAAEN,6BAA6B,CAACiB,OAD5C;AAEE,MAAA,WAAW,EAAEhB,8BAA8B,CAACiB,KAF9C;AAGE,MAAA,YAAY,EAAE,CAHhB;AAIE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,EAFH;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAJT;AASE,MAAA,OAAO,EAAEb;AATX,MAHJ;AAAA,IADF;AAmBD;AAED,IAAMO,MAAM,GAAGX,WAAW,CAACkB,MAAZ,CAAmB;AAChCN,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE;AADF,GADyB;AAKhC,gCAA8B;AAC5BP,IAAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAE;AADF;AADqB;AALE,CAAnB,CAAf","sourcesContent":["import { AppleAuthenticationButton, AppleAuthenticationButtonType, AppleAuthenticationButtonStyle } from 'expo-apple-authentication';\nimport React from 'react';\nimport { Text, View } from 'react-native';\nimport useAppleAuthentication from '../../hooks/auth/useAppleAuthentication';\n\nimport EStyleSheet from 'react-native-extended-stylesheet';\n\nexport default function Login() {\n  const [appleAuthAvailable, authWithApple] = useAppleAuthentication();\n\n  async function loginWithApple() {\n    try {\n      const [credential, data] = await authWithApple();\n      console.log(credential)\n      // await login(credential, data);\n    } catch (error: any) {\n      console.error(error);\n      alert('Error Something went wrong. Please try again later.');\n    }\n  }\n\n\n  return (\n    <View>\n      <Text style={styles.hello}>Login</Text>\n      {appleAuthAvailable && (\n        <AppleAuthenticationButton\n          buttonType={AppleAuthenticationButtonType.SIGN_IN}\n          buttonStyle={AppleAuthenticationButtonStyle.BLACK}\n          cornerRadius={5}\n          style={{\n            width: '100%',\n            height: 48,\n            marginTop: 16\n          }}\n          onPress={loginWithApple}\n        />\n      )\n      }\n    </View>\n  )\n}\n\nconst styles = EStyleSheet.create({\n  hello: {\n    color: 'red'\n  },\n\n  '@media (max-width: 1500px)': {\n    hello: {\n      color: 'purple'\n    },\n  }\n})"]},"metadata":{},"sourceType":"module"}