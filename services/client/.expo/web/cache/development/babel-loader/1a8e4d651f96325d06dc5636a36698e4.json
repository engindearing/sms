{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"native-base\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Container, FormInputs } from \"./LoginScreen.styles\";\nimport { useFormik } from \"formik\";\nimport LoginSchema from \"./LoginFormSchema\";\nimport TextInput from \"../../components/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var _useFormik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: LoginSchema,\n    onSubmit: function onSubmit(values) {\n      return alert(\"Email: \" + values.email + \", Password: \" + values.password);\n    }\n  }),\n      handleChange = _useFormik.handleChange,\n      handleSubmit = _useFormik.handleSubmit,\n      values = _useFormik.values,\n      handleBlur = _useFormik.handleBlur,\n      errors = _useFormik.errors,\n      touched = _useFormik.touched;\n\n  useEffect(function () {\n    console.log(errors);\n  }, [errors]);\n  return _jsx(Container, {\n    behavior: \"padding\",\n    children: _jsxs(FormInputs, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        icon: \"email\",\n        onChangeText: handleChange(\"email\"),\n        onBlur: handleBlur('email'),\n        error: errors.email,\n        touched: touched.email\n      }), _jsx(TextInput, {\n        placeholder: \"Enter Password\",\n        icon: \"lock\",\n        onChangeText: handleChange(\"password\"),\n        onBlur: handleBlur('password'),\n        error: errors.password,\n        touched: touched.password\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return handleSubmit();\n        }\n      }), _jsx(Button, {\n        type: \"outline\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Register\");\n        },\n        title: \"REGISTER\"\n      })]\n    })\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/isaiah/dev/sms/services/client/screens/LoginScreen/LoginScreen.tsx"],"names":["React","useEffect","useState","Button","useNavigation","Container","FormInputs","useFormik","LoginSchema","TextInput","LoginScreen","email","setEmail","password","setPassword","navigation","initialValues","validationSchema","onSubmit","values","alert","handleChange","handleSubmit","handleBlur","errors","touched","console","log","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,QAAuB,aAAvB;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,SAAT,EAAoBC,UAApB;AAEA,SAASC,SAAT,QAA0B,QAA1B;AAIA,OAAOC,WAAP;AACA,OAAOC,SAAP;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;;AAEA,mBACEG,SAAS,CAAC;AACRS,IAAAA,aAAa,EAAE;AAAEL,MAAAA,KAAK,EAAE,EAAT;AAAaE,MAAAA,QAAQ,EAAE;AAAvB,KADP;AAERI,IAAAA,gBAAgB,EAAET,WAFV;AAGRU,IAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aACRC,KAAK,aAAWD,MAAM,CAACR,KAAlB,oBAAsCQ,MAAM,CAACN,QAA7C,CADG;AAAA;AAHF,GAAD,CADX;AAAA,MAAQQ,YAAR,cAAQA,YAAR;AAAA,MAAsBC,YAAtB,cAAsBA,YAAtB;AAAA,MAAoCH,MAApC,cAAoCA,MAApC;AAAA,MAA4CI,UAA5C,cAA4CA,UAA5C;AAAA,MAAwDC,MAAxD,cAAwDA,MAAxD;AAAA,MAAgEC,OAAhE,cAAgEA,OAAhE;;AAQExB,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIF,SACE,KAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,SAApB;AAAA,cACE,MAAC,UAAD;AAAA,iBACE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,YAAY,EAAEH,YAAY,CAAC,OAAD,CAH5B;AAKE,QAAA,MAAM,EAAEE,UAAU,CAAC,OAAD,CALpB;AAME,QAAA,KAAK,EAAEC,MAAM,CAACb,KANhB;AAOE,QAAA,OAAO,EAAEc,OAAO,CAACd;AAPnB,QADF,EAWE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,gBADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAEU,YAAY,CAAC,UAAD,CAH5B;AAKE,QAAA,MAAM,EAAEE,UAAU,CAAC,UAAD,CALpB;AAME,QAAA,KAAK,EAAEC,MAAM,CAACX,QANhB;AAOE,QAAA,OAAO,EAAEY,OAAO,CAACZ;AAPnB,QAXF,EAqBE,KAAC,MAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMS,YAAY,EAAlB;AAAA;AADX,QArBF,EAyBE,KAAC,MAAD;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMP,UAAU,CAACa,QAAX,CAAoB,UAApB,CAAN;AAAA,SAHX;AAIE,QAAA,KAAK,EAAE;AAJT,QAzBF;AAAA;AADF,IADF;AAoCD,CAtDD;;AAwDA,eAAelB,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Button } from \"native-base\";\n\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { Container, FormInputs } from \"./LoginScreen.styles\";\n\nimport { useFormik } from \"formik\";\n\nimport { auth } from \"../../firebase\";\n\nimport LoginSchema from \"./LoginFormSchema\";\nimport TextInput from \"../../components/TextInput\";\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigation = useNavigation();\n\n  const { handleChange, handleSubmit, values, handleBlur, errors, touched } =\n    useFormik({\n      initialValues: { email: \"\", password: \"\" },\n      validationSchema: LoginSchema,\n      onSubmit: (values) =>\n        alert(`Email: ${values.email}, Password: ${values.password}`),\n    });\n\n    useEffect(() => {\n      console.log(errors)\n    }, [errors])\n\n  return (\n    <Container behavior=\"padding\">\n      <FormInputs>\n        <TextInput\n          placeholder=\"Email\"\n          icon=\"email\"\n          onChangeText={handleChange(\"email\")}\n\n          onBlur={handleBlur('email')}\n          error={errors.email}\n          touched={touched.email}\n        />\n\n        <TextInput\n          placeholder=\"Enter Password\"\n          icon=\"lock\"\n          onChangeText={handleChange(\"password\")}\n\n          onBlur={handleBlur('password')}\n          error={errors.password}\n          touched={touched.password}\n        />\n\n        <Button\n          onPress={() => handleSubmit()}\n        />\n\n        <Button\n\n          type=\"outline\"\n          onPress={() => navigation.navigate(\"Register\")}\n          title={\"REGISTER\"}\n        />\n      </FormInputs>\n    </Container>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}